@model List<SafestRouteApplication.Models.Observee>
@{
    ViewBag.Title = "Index";
}


<p> @Html.ActionLink("Edit Account Details","Edit")
    @Html.ActionLink("View Account Information", "Details")
    @Html.ActionLink("Create an Avoidance Route", "AddCustomAvoidance")
</p>


<table class="table">
    <tr>
        <th>
            @Html.DisplayName("First Name")
        </th>
        <th>
            @Html.DisplayName("Last Name")
        </th>
        <th></th>

    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>

        </tr>
    }

</table>

<style>

    #map {
        height: 400px;
        width: 700px;
    }
</style>
<br />
<div class="row">
    <div id="map"></div>
    <script>

        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 13,
                center: new google.maps.LatLng(43.4997, -87.8504),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
            })

            var infowindow = new google.maps.InfoWindow({});

            //var allLatLongs = @Html.Raw(Json.Encode(ViewBag.LatLongs));

            var marker, i

            //for (i = 0; i < allLatLongs.length; i += 2) {

            //    marker = new google.maps.Marker({
            //        position: new google.maps.LatLng(allLatLongs[i], allLatLongs[i+1]),
            //        map: map,
            //    })

            //    google.maps.event.addListener(
            //        marker,
            //        'click',
            //        (function (marker, i) {
            //    return function () {
            //        infowindow.open(map, marker)
            //            }
            //})(marker, i)
            //    )
            //}
        }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=YOURKEYHERE&callback=initMap"
            async defer></script>


</div>
