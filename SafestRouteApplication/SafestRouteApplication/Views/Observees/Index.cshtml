
@model  SafestRouteApplication.Models.Observee
@{
    ViewBag.Title = "Observee Home";
}
<br/>
<div class="row">
    <div class="col-md-4">
        <div class="SideBar">
            @Html.ActionLink(" • Leave a Comment", "LeaveComment", "Observees", new { @class = "ActionClass" }) <br />
            @Html.ActionLink(" • Add/Change an Observer on Your Account", "ChangeObserver", "Observees", new { @class = "ActionClass" }) <br />
            @Html.ActionLink(" • Edit Account Info", "Edit", "Observees", new { @class = "ActionClass" }) <br />
            @Html.ActionLink(" • View Account Info", "Details", "Observees", new { @class = "ActionClass" })<br />
            @Html.ActionLink(" • Navigate a Route", "Navigate", "Observees")<br />
        </div>
        <div id="ButtonDiv">
            <input type="button" id="PanicButton" value="PANIC BUTTON" onclick="@("window.location.href='" + @Url.Action("PanicButton", "Observees", new { id = Model.id }) + "'");" />
        </div>
    </div>
    <div class="col-md-8">
        <div id="map"></div>
        <script>
            var map, infoWindow;
            function initMap() {

                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 6,
                    center: new google.maps.LatLng(43.4997, -87.8504),
                    //mapTypeId: google.maps.MapTypeId.ROADMAP,
                })

                infoWindow = new google.maps.InfoWindow({});

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        infoWindow.setPosition(pos);
                        infoWindow.setContent('Location found.');
                        infoWindow.open(map);
                        map.setCenter(pos);
                    }, function () {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });

                } else {
                    handleLocationError(false, infoWindow, map.getCenter());
                }

            }

            function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                infoWindow.setPosition(pos);
                infoWindow.setContent(browserHasGeolocation ?
                    'Error: The Geolocation service failed.' :
                    'Error: Your browser doesn\`t support geolcoation.');
                infoWindow.open(map);
            }

        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhQd9LdAp7Svt8uDNCepKjvqJOnOiQs4c&callback=initMap"
                async defer></script>
    </div>
</div>
